--- origsrc/gettext-0.18.3.2/gettext-runtime/gnulib-lib/localename.c	2014-01-07 00:15:13.000000000 -0600
+++ src/gettext-0.18.3.2/gettext-runtime/gnulib-lib/localename.c	2014-05-27 00:14:51.488997800 -0500
@@ -57,7 +57,7 @@
 # define WINDOWS_NATIVE
 #endif
 
-#if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+#if defined WINDOWS_NATIVE /* Native Windows */
 # define WIN32_LEAN_AND_MEAN
 # include <windows.h>
 /* List of language codes, sorted by value:
@@ -1405,7 +1405,7 @@ gl_locale_name_canonicalize (char *name)
 #endif
 
 
-#if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+#if defined WINDOWS_NATIVE /* Native Windows */
 
 /* Canonicalize a Windows native locale name to a Unix locale name.
    NAME is a sufficiently large buffer.
@@ -2725,11 +2725,6 @@ gl_locale_name_environ (int category, co
          Ignore invalid LANG value set by the Terminal application.  */
       if (strcmp (retval, "UTF-8") != 0)
 #endif
-#if defined __CYGWIN__
-      /* Cygwin.
-         Ignore dummy LANG value set by ~/.profile.  */
-      if (strcmp (retval, "C.UTF-8") != 0)
-#endif
         return retval;
     }
 
@@ -2767,7 +2762,7 @@ gl_locale_name_default (void)
          "C.UTF-8" locale, which operates in the same way as the "C" locale.
   */
 
-#if !(HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE || defined WINDOWS_NATIVE || defined __CYGWIN__)
+#if !(HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE || defined WINDOWS_NATIVE)
 
   /* The system does not have a way of setting the locale, other than the
      POSIX specified environment variables.  We use C as default locale.  */
@@ -2822,7 +2817,7 @@ gl_locale_name_default (void)
 
 # endif
 
-# if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+# if defined WINDOWS_NATIVE /* Native Windows */
   {
     LCID lcid;
 
--- origsrc/gettext-0.18.3.2/gettext-runtime/intl/localename.c	2013-03-07 02:44:37.000000000 -0600
+++ src/gettext-0.18.3.2/gettext-runtime/intl/localename.c	2014-05-26 22:54:02.761287600 -0500
@@ -57,7 +57,7 @@
 # define WINDOWS_NATIVE
 #endif
 
-#if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+#if defined WINDOWS_NATIVE_ /* Native Windows */
 # define WIN32_LEAN_AND_MEAN
 # include <windows.h>
 /* List of language codes, sorted by value:
@@ -1405,7 +1405,7 @@ gl_locale_name_canonicalize (char *name)
 #endif
 
 
-#if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+#if defined WINDOWS_NATIVE /* Native Windows */
 
 /* Canonicalize a Windows native locale name to a Unix locale name.
    NAME is a sufficiently large buffer.
@@ -2670,7 +2670,7 @@ gl_locale_name_thread (int category, con
    However it does not specify the exact format.  Neither do SUSV2 and
    ISO C 99.  So we can use this feature only on selected systems (e.g.
    those using GNU C Library).  */
-#if defined _LIBC || ((defined __GLIBC__ && __GLIBC__ >= 2) && !defined __UCLIBC__)
+#if defined _LIBC || ((defined __GLIBC__ && __GLIBC__ >= 2) && !defined __UCLIBC__) || defined(__CYGWIN__)
 # define HAVE_LOCALE_NULL
 #endif
 
@@ -2725,11 +2725,6 @@ gl_locale_name_environ (int category, co
          Ignore invalid LANG value set by the Terminal application.  */
       if (strcmp (retval, "UTF-8") != 0)
 #endif
-#if defined __CYGWIN__
-      /* Cygwin.
-         Ignore dummy LANG value set by ~/.profile.  */
-      if (strcmp (retval, "C.UTF-8") != 0)
-#endif
         return retval;
     }
 
@@ -2767,7 +2762,7 @@ gl_locale_name_default (void)
          "C.UTF-8" locale, which operates in the same way as the "C" locale.
   */
 
-#if !(HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE || defined WINDOWS_NATIVE || defined __CYGWIN__)
+#if !(HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE || defined WINDOWS_NATIVE)
 
   /* The system does not have a way of setting the locale, other than the
      POSIX specified environment variables.  We use C as default locale.  */
@@ -2822,7 +2817,7 @@ gl_locale_name_default (void)
 
 # endif
 
-# if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+# if defined WINDOWS_NATIVE /* Native Windows */
   {
     LCID lcid;
 
--- origsrc/gettext-0.18.3.2/gettext-tools/gnulib-lib/localename.c	2014-01-07 00:15:40.000000000 -0600
+++ src/gettext-0.18.3.2/gettext-tools/gnulib-lib/localename.c	2014-05-26 22:54:30.910362100 -0500
@@ -57,7 +57,7 @@
 # define WINDOWS_NATIVE
 #endif
 
-#if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+#if defined WINDOWS_NATIVE_ /* Native Windows */
 # define WIN32_LEAN_AND_MEAN
 # include <windows.h>
 /* List of language codes, sorted by value:
@@ -1405,7 +1405,7 @@ gl_locale_name_canonicalize (char *name)
 #endif
 
 
-#if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+#if defined WINDOWS_NATIVE /* Native Windows */
 
 /* Canonicalize a Windows native locale name to a Unix locale name.
    NAME is a sufficiently large buffer.
@@ -2670,7 +2670,7 @@ gl_locale_name_thread (int category, con
    However it does not specify the exact format.  Neither do SUSV2 and
    ISO C 99.  So we can use this feature only on selected systems (e.g.
    those using GNU C Library).  */
-#if defined _LIBC || ((defined __GLIBC__ && __GLIBC__ >= 2) && !defined __UCLIBC__)
+#if defined _LIBC || ((defined __GLIBC__ && __GLIBC__ >= 2) && !defined __UCLIBC__) || defined(__CYGWIN__)
 # define HAVE_LOCALE_NULL
 #endif
 
@@ -2725,11 +2725,6 @@ gl_locale_name_environ (int category, co
          Ignore invalid LANG value set by the Terminal application.  */
       if (strcmp (retval, "UTF-8") != 0)
 #endif
-#if defined __CYGWIN__
-      /* Cygwin.
-         Ignore dummy LANG value set by ~/.profile.  */
-      if (strcmp (retval, "C.UTF-8") != 0)
-#endif
         return retval;
     }
 
@@ -2767,7 +2762,7 @@ gl_locale_name_default (void)
          "C.UTF-8" locale, which operates in the same way as the "C" locale.
   */
 
-#if !(HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE || defined WINDOWS_NATIVE || defined __CYGWIN__)
+#if !(HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE || defined WINDOWS_NATIVE)
 
   /* The system does not have a way of setting the locale, other than the
      POSIX specified environment variables.  We use C as default locale.  */
@@ -2822,7 +2817,7 @@ gl_locale_name_default (void)
 
 # endif
 
-# if defined WINDOWS_NATIVE || defined __CYGWIN__ /* Native Windows or Cygwin */
+# if defined WINDOWS_NATIVE /* Native Windows */
   {
     LCID lcid;
 
